import "./styles.css";
import { useRef } from "react";

export default function App() {
  const inputRef = useRef(null);

  const focusInput = () => {
    inputRef.current.focus();
  };

  return (
    <>
      <input ref={inputRef} />
      <button onClick={focusInput}>Focus Input</button>
    </>
  );
}


//useCallback(callback, dependecies)

import React, { useState, useCallback } from "react";
//Child Component
const ChildComponent = React.memo(({ handleClick }) => {
  console.log("Child Component rendered");
  return <button onClick={handleClick}>Click me</button>;
});

//Parent Component
const ParentComponent = () => {
  const [count, setCount] = useState(0);

  const increment = useCallback(() => {
    setCount((c) => c + 1);
  }, []);

  return (
    <div>
      <ChildComponent handleClick={increment} />
      <p>Count: {count}</p>
    </div>
  );
};

export default ParentComponent;

